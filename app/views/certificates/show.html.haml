- page_title @cert.subject
%ol.breadcrumb
  = cert_chain_tree(@cert) do |cert|
    - if cert == @cert || cert.stub?
      %li.active= cert
    - else
      %li= link_to cert, cert
%h1= @cert.subject.CN
= render partial: 'validity_bar', locals: { cert: @cert }
%h4 Quick check
%ul
  - if @cert.can_sign?
    %li Can sign other certificates
  - else
    %li Can't sign other certificates
  - if @cert.expired?
    %li Expired
  - stores = @cert.in_trust_store
  - if stores.any?
    %li
      %span Anchored to trusted certificate
      %ul
        - stores.each do |store|
          %li= store.name
%aside
  %ul
    %li= react_component 'CertBodyDialogLink', { model: { id: @cert.id, type: 'Certificate' }, children: 'Show certificate' }, prerender: true, data: { react_mount: true }
    - if @cert.private_key
      %li= link_to 'Renew manually', action: :csr
      %li= link_to t('views.certificates.show.renew.lets_encrypt'), lets_encrypt_certificate_path
    %li= link_to pluralize(@cert.sub_certificates.count, 'child'), action: :index, issuer: @cert.id
= render partial: 'validator', locals: { public_key: @cert.public_key }
= render partial: 'certificates/history/history'
%h2 Services
- if @cert.services.any?
  %ul
    - @cert.services.each do |service|
      %li= link_to service, service
- else
  %p No services yet. A service allows you to securely deploy this certificate to a host
  = link_to 'Create a service', controller: :services, action: :new, cert_id: @cert.id
#modal
