= bootstrap_form_for :certificate, url: url_for(action: :create), layout: :horizontal do |f|
  = f.fields_for :csr_attributes do |csr|
    = csr.fields_for :subject_attributes do |sb|
      -# TODO: Figure out how to use Bootstrap forms for this one
      .form-group
        = label :subject, :CN, 'Common Name', class: 'col-sm-2 control-label'
        .col-sm-10
          .input-group
            .input-group-addon https://
            = text_field_tag 'certificate[csr_attributes][subject_attributes][CN]', nil, class: 'form-control', placeholder: 'example.com'
      = sb.text_field :O, label: 'Organization Name', placeholder: 'Foo Widgets, Ltd.'
      = sb.text_field :OU, label: 'Department Name', placeholder: 'Accounting'
      = sb.text_field :C, label: 'Country', placeholder: 'US or UK'
    .form-group
      %label.col-sm-2.control-label Alternate Names (SAN)
      #subject-alt-list.col-sm-10
        %input.form-control{type: :text, name: 'certificate[csr_attributes][subject_alternate_names][]'}
  = f.fields_for :private_key_attributes do |pk|
    = pk.form_group :type, label: { text: 'Key algorithm' } do
      = pk.radio_button :type, 'RSAPrivateKey', checked: true, label: 'RSA'
      = pk.radio_button :type, 'ECPrivateKey', label: 'Elliptic Curve'
    = f.form_group :bit_length, label: { text: 'Bit length' } do
      - default = SecurityPolicy.bit_length.default
      - (10..12).map {|b| 2 ** b}.each do |bit|
        - insecure = SecurityPolicy.bit_length.insecure? bit
        = pk.radio_button :bit_length, bit, label: "#{bit} bit #{'(insecure)' if insecure}", checked: default == bit
    = f.form_group :curve_name, label: { text: 'Curve name'} do
      - SecurityPolicy.elliptic_curve.secure.each do |curve|
        = pk.radio_button :curve_name, curve, label: curve
  = f.submit 'Create Certificate', class: 'btn btn-primary'
%script#subject-alt-name-body{type: 'x-tmpl-mustache'}
  %input.form-control{type: :text, name: 'certificate[csr_attributes][subject_alternate_names][]'}