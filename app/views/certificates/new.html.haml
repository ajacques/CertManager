- page_title t 'views.certificates.new.title'
%h1= t 'views.certificates.new.title'
%p= t 'views.certificates.new.instruction'
= bootstrap_form_for :certificate, url: url_for(action: :create), layout: :horizontal do |f|
  = f.fields_for :csr_attributes do |csr|
    = csr.fields_for :subject_attributes do |sb|
      -# TODO: Figure out how to use Bootstrap forms for this one
      .form-group
        .col-sm-2.control-label
          = label 'certificate_csr_attributes_subject_attributes', 'CN', 'Common Name'
          %abbr.text-success{ title: t('views.certificates.new.recommended_reason') }= t 'views.certificates.new.recommended'
        .col-sm-10
          .input-group
            .input-group-addon CN
            = text_field_tag 'certificate[csr_attributes][subject_attributes][CN]', nil,
              class: 'form-control', placeholder: 'example.com'
          %span.help-block= t 'views.certificates.new.help.common_name'
      = sb.text_field :O, label: 'Organization Name', placeholder: 'Foo Widgets, Ltd.'
      = sb.text_field :OU, label: 'Department Name', placeholder: 'Accounting'
      = sb.text_field :C, label: 'Country', placeholder: 'US or UK'
    .form-group
      %label.col-sm-2.control-label= t 'attributes.subject_alternate_names.label'
      .col-sm-10#subject-alt-list
        = react_component 'SubjectAltNameList', {}, prerender: true, data: { react_mount: true }
  = f.fields_for :private_key_attributes do |pk|
    = pk.form_group :type, label: { text: 'Key algorithm' } do
      .row
        .col-md-6
          .well
            = pk.radio_button :type, 'RSAPrivateKey', checked: true, label: 'RSA'
            = f.form_group :bit_length, label: { text: 'Bit length' } do
              - default_val = SecurityPolicy.bit_length.default
              - (10..12).map { |b| 2**b }.each do |bit|
                - insecure = SecurityPolicy.bit_length.insecure? bit
                = pk.radio_button :bit_length, bit, label: "#{bit} bit #{'(insecure)' if insecure}", checked: default_val == bit
        .col-md-6
          .well
            = pk.radio_button :type, 'ECPrivateKey', label: 'Elliptic Curve'
            = f.form_group :curve_name, label: { text: 'Curve name' } do
              - curves = SecurityPolicy.elliptic_curve
              - curves.secure.each do |curve|
                = pk.radio_button :curve_name, curve, label: curve, checked: curves.default == curve
  = f.submit 'Create Certificate', class: 'btn btn-primary'
